Index: build_tools/embed_modules.xml
===================================================================
--- build_tools/embed_modules.xml	(revision 81434)
+++ build_tools/embed_modules.xml	(working copy)
@@ -8,7 +8,7 @@
 		<member name="channels" displayname="Channels" remove_on_change="channels/*.o channels/misdn/*.o">
 			<depend>gnu_ld</depend>
 		</member>
-		<member name="codecs" displayname="Coders/Decoders" remove_on_change="codecs/*.o codecs/gsm/src/*.o codecs/ilbc/*.o codecs/lpc10/*.o codecs/gsm/lib/libgsm.a codecs/lpc10/liblpc10.a codecs/ilbc/libilbc.a">
+		<member name="codecs" displayname="Coders/Decoders" remove_on_change="codecs/*.o codecs/gsm/src/*.o codecs/ilbc/*.o codecs/lpc10/*.o codecs/gsm/lib/libgsm.a codecs/lpc10/liblpc10.a codecs/ilbc/libilbc.a codecs/amr/libamr.a">
 			<depend>gnu_ld</depend>
 		</member>
 		<member name="formats" displayname="File Formats" remove_on_change="formats/*.o">
Index: include/asterisk/frame.h
===================================================================
--- include/asterisk/frame.h	(revision 81434)
+++ include/asterisk/frame.h	(working copy)
@@ -242,6 +242,8 @@
 #define AST_FORMAT_G726		(1 << 11)
 /*! G.722 */
 #define AST_FORMAT_G722		(1 << 12)
+/*! AMR-NB */
+#define AST_FORMAT_AMRNB 	(1 << 13)
 /*! Maximum audio format */
 #define AST_FORMAT_MAX_AUDIO	(1 << 15)
 /*! Maximum audio mask */
Index: main/channel.c
===================================================================
--- main/channel.c	(revision 81434)
+++ main/channel.c	(working copy)
@@ -695,6 +695,8 @@
 		/*! Okay, we're down to vocoders now, so pick GSM because it's small and easier to
 		    translate and sounds pretty good */
 		AST_FORMAT_GSM,
+		/*! Try AMR */
+		AST_FORMAT_AMRNB,
 		/*! iLBC is not too bad */
 		AST_FORMAT_ILBC,
 		/*! Speex is free, but computationally more expensive than GSM */
Index: main/translate.c
===================================================================
--- main/translate.c	(revision 81434)
+++ main/translate.c	(working copy)
@@ -492,7 +492,7 @@
 /*! \brief CLI "show translation" command handler */
 static int show_translation_deprecated(int fd, int argc, char *argv[])
 {
-#define SHOW_TRANS 13
+#define SHOW_TRANS 14
 	int x, y, z;
 	int curlen = 0, longest = 0;
 
Index: main/rtp.c
===================================================================
--- main/rtp.c	(revision 81434)
+++ main/rtp.c	(working copy)
@@ -1341,6 +1341,7 @@
 	{{1, AST_FORMAT_ILBC}, "audio", "iLBC"},
 	{{1, AST_FORMAT_G722}, "audio", "G722"},
 	{{1, AST_FORMAT_G726_AAL2}, "audio", "AAL2-G726-32"},
+	{{1, AST_FORMAT_AMRNB}, "audio", "AMR"},
 	{{0, AST_RTP_DTMF}, "audio", "telephone-event"},
 	{{0, AST_RTP_CISCO_DTMF}, "audio", "cisco-telephone-event"},
 	{{0, AST_RTP_CN}, "audio", "CN"},
@@ -1378,6 +1379,7 @@
 	[31] = {1, AST_FORMAT_H261},
 	[34] = {1, AST_FORMAT_H263},
 	[103] = {1, AST_FORMAT_H263_PLUS},
+	[96] = {1, AST_FORMAT_AMRNB},
 	[97] = {1, AST_FORMAT_ILBC},
 	[99] = {1, AST_FORMAT_H264},
 	[101] = {0, AST_RTP_DTMF},
Index: main/frame.c
===================================================================
--- main/frame.c	(revision 81434)
+++ main/frame.c	(working copy)
@@ -117,10 +117,10 @@
 	{ 1, AST_FORMAT_ILBC, "ilbc", "iLBC", 50, 30, 30, 30, 30 },		/*!< 11: codec_ilbc.c */ /* inc=30ms - workaround */
 	{ 1, AST_FORMAT_G726_AAL2, "g726aal2", "G.726 AAL2", 40, 10, 300, 10, 20 },	/*!<  12: codec_g726.c */
 	{ 1, AST_FORMAT_G722, "g722", "G722"},					/*!< 13 */
+	{ 1, AST_FORMAT_AMRNB, "amr", "AMR NB", 32, 20, 300, 0, 20},          /*!<  codec_amr.c */
 	{ 0, 0, "nothing", "undefined" },
 	{ 0, 0, "nothing", "undefined" },
 	{ 0, 0, "nothing", "undefined" },
-	{ 0, 0, "nothing", "undefined" },
 	{ 0, AST_FORMAT_MAX_AUDIO, "maxaudio", "Maximum audio format" },	
 	{ 1, AST_FORMAT_JPEG, "jpeg", "JPEG image"},	/*!< 17: See format_jpeg.c */
 	{ 1, AST_FORMAT_PNG, "png", "PNG image"},	/*!< 18: Image format */
@@ -631,7 +631,7 @@
 	ast_cli(fd, "--------------------------------------------------------------------------------\n");
 	if ((argc == 2) || (!strcasecmp(argv[1],"audio"))) {
 		found = 1;
-		for (i=0;i<13;i++) {
+		for (i=0;i<14;i++) {
 			snprintf(hex,25,"(0x%x)",1<<i);
 			ast_cli(fd, "%11u (1 << %2d) %10s  audio   %8s   (%s)\n",1 << i,i,hex,ast_getformatname(1<<i),ast_codec2str(1<<i));
 		}
@@ -675,7 +675,7 @@
 	ast_cli(fd, "--------------------------------------------------------------------------------\n");
 	if ((argc == 3) || (!strcasecmp(argv[3],"audio"))) {
 		found = 1;
-		for (i=0;i<13;i++) {
+		for (i=0;i<14;i++) {
 			snprintf(hex,25,"(0x%x)",1<<i);
 			ast_cli(fd, "%11u (1 << %2d) %10s  audio   %8s   (%s)\n",1 << i,i,hex,ast_getformatname(1<<i),ast_codec2str(1<<i));
 		}
@@ -1462,6 +1462,36 @@
 	return cnt;
 }
 
+static int amr_samples(unsigned char *data, int datalen)
+{
+	short block_size[16]={ 12, 13, 15, 17, 19, 20, 26, 31, 5, 0, 0, 0, 0, 0, 0, 0 };
+	int samples = 0;
+
+	/* we asume RTP octed aligned format (RFC 4867 section 4.4)
+	   skip first octed (CMR) */
+	datalen--;
+	data++;
+
+	while (datalen > 0) {
+		unsigned dec_mode = (data[0]>>3) & 0x000f;
+		unsigned psize = block_size[dec_mode];
+
+		if (psize)
+			samples += 160;
+
+		if ( !(data[0]>>7) ) {
+			/* this was the last ToC entry */
+			break;
+		}
+
+		data++; /* Skip over the block. */
+		datalen --;
+		/* ast_verbose("Got AMR frame size %d inside ast_frame\n", psize); */
+	}
+	/* todo: how can we signal an error while decoding the frame structure? */
+	return samples;
+}
+
 int ast_codec_get_samples(struct ast_frame *f)
 {
 	int samples=0;
@@ -1499,6 +1529,9 @@
 	case AST_FORMAT_G726_AAL2:
 		samples = f->datalen * 2;
 		break;
+	case AST_FORMAT_AMRNB:
+		samples = amr_samples(f->data, f->datalen);
+		break;
 	default:
 		ast_log(LOG_WARNING, "Unable to calculate samples for format %s\n", ast_getformatname(f->subclass));
 	}
Index: codecs/Makefile
===================================================================
--- codecs/Makefile	(revision 81434)
+++ codecs/Makefile	(working copy)
@@ -25,6 +25,7 @@
 
 LIBILBC:=ilbc/libilbc.a
 LIBLPC10:=lpc10/liblpc10.a
+LIBAMR:=amr/libamr.a
 
 all: _all
 
@@ -39,6 +40,7 @@
 	$(MAKE) -C gsm clean
 	$(MAKE) -C lpc10 clean
 	$(MAKE) -C ilbc clean
+	$(MAKE) -C amr clean
 
 gsm/lib/libgsm.a:
 	@mkdir -p gsm/lib
@@ -53,3 +55,9 @@
 	@$(MAKE) -C ilbc all
 
 $(if $(filter codec_ilbc,$(EMBEDDED_MODS)),modules.link,codec_ilbc.so): $(LIBILBC)
+
+$(LIBAMR):
+	@$(MAKE) -C amr
+
+$(if $(filter codec_amr,$(EMBEDDED_MODS)),modules.link,codec_amr.so): $(LIBAMR)
+
